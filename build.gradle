apply plugin: 'idea'
apply plugin: 'java'

group = 'info.treyturner.karate.reprex'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    karateVersion = '0.9.6.RC2'
    junitPlatformVersion = '1.6.2'
    junitJupiterVersion = '5.6.2'
    slf4jVersion = '1.7.30'
    logbackVersion = '1.2.3'
}

dependencies {
    // Karate
    implementation "com.intuit.karate:karate-junit5:$karateVersion"
    implementation "com.intuit.karate:karate-apache:$karateVersion"
    implementation "org.junit.platform:junit-platform-engine:$junitPlatformVersion"
    implementation "org.junit.jupiter:junit-jupiter:$junitJupiterVersion"

    // Slf4j & Logback
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "ch.qos.logback:logback-core:$logbackVersion"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"
}

sourceSets {
    test {
        resources {
            srcDir file('src/test/java')
            exclude '**/*.java'
        }
    }
}

tasks.withType(Test).all {
    useJUnitPlatform()

    testLogging { // Log these test events to console
        events "started", "skipped", "passed", "failed", "standardOut"
    }

    outputs.upToDateWhen { false } // Always run tests

    systemProperty 'karate.options', System.getProperty('karate.options')
    systemProperty 'karate.env', System.getProperty('karate.env')

    reports.junitXml.destination(new File("$buildDir/reports/junit"))
    reports.html.destination(new File("$buildDir/reports/gradle"))
}

task karateDebug(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'com.intuit.karate.cli.Main'
}
